/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/
import React, { useRef } from 'react'
import { useGLTF, Html } from '@react-three/drei'
import { useLoader } from '@react-three/fiber'
import { TextureLoader } from 'three/src/loaders/TextureLoader'

export default function Watertoren(props) {
  const { nodes, materials } = useGLTF('./models/watertoren.glb')
  const colorMap = useLoader(TextureLoader, './models/textures/watertoren-baked.jpg')
  colorMap.flipY = false

  const text = props.label

  return (
    <group {...props} dispose={null}>
      <group>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cube007.geometry}
        material={materials.Material}
        position={[-0.665, 0.045, 2.214]}
        rotation={[0, -1.568, 0]}
      >
    
        <meshStandardMaterial 
          map={colorMap}
          emissive="#BC78FF" 
          emissiveIntensity={ 0 } />
      </mesh>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Circle006.geometry}
        material={materials.Material}
        position={[-0.666, 2.098, 2.211]}
        rotation={[0, -1.568, 0]}
      >
           <Html
         position={ [0.1,0.75,0.25]}
         distanceFactor={6}
         occlude>
            <p className='building-label'>{text}</p>
        </Html>
        <meshStandardMaterial 
          map={colorMap}
          emissive="#BC78FF" 
          emissiveIntensity={ 0 } />
      </mesh>
      </group>
    </group>
  )
}

useGLTF.preload('./models/watertoren.glb')